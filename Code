 local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Prison Life GUI",
   LoadingTitle = "Prison Life GUI",
   LoadingSubtitle = "by TEST122456654",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Prison Life GUI",
      Subtitle = "Key System",
      Note = "The key is in discord Server:",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/4jKqMfMj"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "Thanks for using the script",
   Content = "The script is still in beta",
   Duration = 5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})



local Button = MainTab:CreateButton({
   Name = "Btools",
   Callback = function()
   loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/BTools.txt"))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Click Teleport",
   Callback = function()
mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "Click Teleport"
tool.Activated:connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
   
tool.Parent = game.Players.LocalPlayer.Backpack
	
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "Walkspeed",
   Range = {0, 100},
   Increment = 10,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "JumpPower",
   Range = {0, 100},
   Increment = 10,
   Suffix = "JumpPower",
   CurrentValue = 50,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})

local AutoTab = Window:CreateTab("Automation", nil) -- Title, Image
local AutoSection = AutoTab:CreateSection("Automation")

local Button = AutoTab:CreateButton({
   Name = "Auto Kill all(it can't be undone)",
   Callback = function()
   spawn(function()
while wait(0.1) do
for i, v in next, game:GetService("Players"):GetChildren() do
pcall(function()
if v~= game:GetService("Players").LocalPlayer and not v.Character:FindFirstChildOfClass("ForceField") and v.Character.Humanoid.Health > 0 then
while v.Character:WaitForChild("Humanoid").Health > 0 do
wait();
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame;
for x, c in next, game:GetService("Players"):GetChildren() do
if c ~= game:GetService("Players").LocalPlayer then game.ReplicatedStorage.meleeEvent:FireServer(c) end
end
end
end
end)
wait()
end
end
end)
   end,
})


local Button = MainTab:CreateButton({
   Name = "CMD-X",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source", true))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Prevail X",
   Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/mHfK0Xk4", true))()
   end,
})

local Button = MainTab:CreateButton({
   Name = "Destroy GUI",
   Callback = function()
   Rayfield:Destroy()
   end,
})

local FunTab = Window:CreateTab("Funny things", nil) -- Title, Image
local FunSection = FunTab:CreateSection("Funny things")

local Button = FunTab:CreateButton({
   Name = "Gravity 0 (it can't be undone)",
   Callback = function()
   -- The function that takes place when the button is pressed
   end,
})
